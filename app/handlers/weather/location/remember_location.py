import emoji
from aiogram import Router, types, F
from aiogram.types import CallbackQuery
from aiogram.fsm.context import FSMContext
from aiogram.filters.callback_data import CallbackData
from app.database.user.models import User
from app.handlers.weather.location.weather_in_location import LocationState
from app.keyboards.base import MenuCallbackFactory
from app.keyboards.location import LocationCallbackFactory, location_keyboard
from app.keyboards.sending_weather import SendingWeatherMenuCallbackFactory
from app.services.weather.api.get_current_weather_by_coordinates import get_weather_by_coordinates

router = Router()


@router.callback_query(MenuCallbackFactory.filter(F.action == "location"))
async def remember_location_call(
        callback: CallbackQuery,
        bot_user: User
):
    await remember_location(callback, "menu", bot_user)


@router.callback_query(SendingWeatherMenuCallbackFactory.filter(F.action == "location"))
async def remember_location_call(
        callback: CallbackQuery,
        bot_user: User
):
    await remember_location(callback, MenuCallbackFactory(action="sending_weather"), bot_user)


# TODO: –°–¥–µ–ª–∞—Ç—å —á—Ç–æ–±—ã –≤ —Ñ–∞–±—Ä–∏–∫–µ –º–µ—Å—Ç–æ–ø–æ–ª–æ–∂–µ–Ω–∏—è –ø–µ—Ä–µ–¥–∞–≤–∞–ª–æ—Å—å,
#  –∫–Ω–æ–ø–∫–∞ –≤–µ—Ä–Ω—É—Ç—å—Å—è –∏ —Å–æ–æ–±—â–µ–Ω–∏–µ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–ª–æ—Å—å –ø–æ—Å–ª–µ —É–¥–∞–ª–µ–Ω–∏—è –∏–ª–∏ –∏–∑–º–µ–Ω–µ–Ω–∏—è
async def remember_location(callback: CallbackQuery, return_callback_data: str | CallbackData, bot_user: User):
    text = "–ù–∞—Å—Ç—Ä–æ–π–∫–∞ –º–µ—Å—Ç–æ–ø–æ–ª–æ–∂–µ–Ω–∏—è:"
    if bot_user.location is not None:
        text = (f"–ó–∞–¥–∞–Ω–Ω–æ–µ –º–µ—Å—Ç–æ–ø–æ–ª–æ–∂–µ–Ω–∏–µ - {bot_user.location}\n"
                f"–ù–∞—Å—Ç—Ä–æ–π–∫–∞ –º–µ—Å—Ç–æ–ø–æ–ª–æ–∂–µ–Ω–∏—è:")
    await callback.message.edit_text(text=text,
                                     reply_markup=location_keyboard(
                                         user=bot_user,
                                         return_callback_data=return_callback_data
                                     ))
    await callback.answer()


@router.callback_query(LocationCallbackFactory.filter(F.action == "remember_location"))
async def remember_location_call(
        callback: CallbackQuery,
        callback_data: LocationCallbackFactory,
        state: FSMContext
):
    await callback.message.answer(f'–•–æ—Ä–æ—à–æ, –æ—Ç–ø—Ä–∞–≤—å—Ç–µ –≥–µ–æ–ª–æ–∫–∞—Ü–∏—é, –ø—Ä–∏–∫—Ä–µ–ø–∏–≤ –µ—ë –∫ —Å–æ–æ–±—â–µ–Ω–∏—é —Ç–µ–ª–µ–≥—Ä–∞–º–º –∏ —è –µ—ë –∑–∞–ø–æ–º–Ω—é!')
    await callback.answer()
    await state.set_state(LocationState.send_location_remember)


@router.message(LocationState.send_location_remember)
async def remember_location_handler(
        message: types.Message,
        state: FSMContext,
        bot_user: User
):
    if message.location is not None:
        latitude = message.location.latitude
        longitude = message.location.longitude

        bot_user.location = (latitude, longitude)
        await bot_user.save()

        weather = await get_weather_by_coordinates(latitude, longitude)
        await message.answer(f'*–í —ç—Ç–æ–º –º–µ—Å—Ç–æ–ø–æ–ª–æ–∂–µ–Ω–∏–∏*{emoji.emojize("üó∫")}\n\n'
                             f'{weather.rus_string()}',
                             parse_mode="Markdown"
                             )
        await message.answer(text=f'–ú–µ—Å—Ç–æ–ø–æ–ª–æ–∂–µ–Ω–∏–µ –∑–∞–ø–æ–º–Ω–µ–Ω–æ!!')

    else:
        await message.answer(text=f'–í—ã –Ω–µ –æ—Ç–ø—Ä–∞–≤–∏–ª–∏ –≥–µ–æ–ª–æ–∫–∞—Ü–∏—é, —á—Ç–æ–±—ã –ø–æ–ø—Ä–æ–±–æ–≤–∞—Ç—å —Å–Ω–æ–≤–∞ –Ω–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É –º–µ–Ω—é!!')

    await state.clear()


@router.callback_query(LocationCallbackFactory.filter(F.action == "forget_location"))
async def forget_location_call(
        callback: CallbackQuery,
        callback_data: LocationCallbackFactory,
        bot_user: User
):
    bot_user.location = None
    if bot_user.sending_weather is False:
        await callback.message.answer(f'–ó–∞–¥–∞–Ω–Ω–∞—è –≥–µ–æ–ª–æ–∫–∞—Ü–∏—è —É–¥–∞–ª–µ–Ω–∞!')
    else:
        await bot_user.stop_send_weather()
        await callback.message.answer(f'–ó–∞–¥–∞–Ω–Ω–∞—è –≥–µ–æ–ª–æ–∫–∞—Ü–∏—è —É–¥–∞–ª–µ–Ω–∞!\n'
                                      f'–†–∞—Å—Å—ã–ª–∫–∞ –ø–æ–≥–æ–¥—ã –≤—ã–∫–ª—é—á–µ–Ω–∞!!')
    await bot_user.save()

    await callback.answer()
# TODO: –î–≤–æ–π–Ω–æ–π –≤—ã–∑–æ–≤ save()
