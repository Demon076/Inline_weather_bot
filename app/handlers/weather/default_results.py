from typing import List

import emoji
from aiogram.types import InlineQueryResultArticle, InputTextMessageContent

from app.keyboards.inline import city_keyboard
from app.services.weather.data import Cities


class DefaultResults:
    __default_results: List[InlineQueryResultArticle] = []
    not_found = [InlineQueryResultArticle(
        id="1",
        title="–ù–µ –º–æ–≥—É –Ω–∞–π—Ç–∏ –≥–æ—Ä–æ–¥ –≤ —Å–æ–∏—Ö —Å–ø–∏—Å–∫–∞—Ö",
        description="–ï—Å–ª–∏ –≤–∞—à–µ–≥–æ –≥–æ—Ä–æ–¥–∞ –Ω–µ –Ω–∞—à–ª–æ—Å—å, —Ç–æ –Ω–∞–ø–∏—à–∏—Ç–µ –æ–± —ç—Ç–æ–º –±–æ—Ç—É –≤ –ª—Å.",
        input_message_content=InputTextMessageContent(
            message_text=f'–í–∞—à –≥–æ—Ä–æ–¥ –Ω–µ –Ω–∞–π–¥–µ–Ω {emoji.emojize("üò¢")}\n\n'
                         f'–ù–∞–ø–∏—à–∏—Ç–µ –±–æ—Ç—É, —á—Ç–æ–±—ã –≤–∞—à –Ω–∞—Å–µ–ª—ë–Ω–Ω—ã–π –ø—É–Ω–∫—Ç –¥–æ–±–∞–≤–∏–ª–∏ –≤ —Å–ø–∏—Å–∫–∏!'
        )
    )]

    @classmethod
    def reload_default_results(cls):
        cls.__default_results = []
        for index, city in enumerate(Cities.list_cities_ru):
            cls.__default_results.append(
                InlineQueryResultArticle(
                    id=str(index),
                    title=city,
                    description="–ü–æ–∫–∞–∑–∞—Ç—å –ø–æ–≥–æ–¥—É!",
                    input_message_content=InputTextMessageContent(
                        message_text=f'–ù–∞–∂–º–∏—Ç–µ –Ω–∞ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ, —á—Ç–æ–±—ã —É–∑–Ω–∞—Ç—å –ø–æ–≥–æ–¥—É –≤ –≥–æ—Ä–æ–¥–µ {city} ^_^'
                    ),
                    reply_markup=city_keyboard(Cities.dict_cities_ru[city].id)
                )
            )

    @classmethod
    def default_results(cls):
        if cls.__default_results:
            return cls.__default_results
        cls.reload_default_results()
        return cls.__default_results
